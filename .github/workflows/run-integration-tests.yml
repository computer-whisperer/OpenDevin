name: Run Integration Tests

on: [push, pull_request]

jobs:
  on-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: SWEAgent-py311-ssh
            python-version: "3.11"
            agent: "SWEAgent"
            embedding-model: "none"
            sandbox: "ssh"
            sandbox-workspace-path: "/workspace"
          - name: PlannerAgent-py311-ssh
            python-version: "3.11"
            agent: "PlannerAgent"
            embedding-model: "none"
            sandbox: "ssh"
            sandbox-workspace-path: "/workspace"
          - name: MonologueAgent-py311-ssh
            python-version: "3.11"
            agent: "MonologueAgent"
            embedding-model: "local"
            sandbox: "ssh"
            sandbox-workspace-path: "/workspace"
          - name: CodeActAgent-py311-ssh
            python-version: "3.11"
            agent: "CodeActAgent"
            embedding-model: "none"
            sandbox: "ssh"
            sandbox-workspace-path: "/workspace"
          - name: SWEAgent-py311-exec
            python-version: "3.11"
            agent: "SWEAgent"
            embedding-model: "none"
            sandbox: "exec"
            sandbox-workspace-path: "/workspace"
          - name: PlannerAgent-py311-exec
            python-version: "3.11"
            agent: "PlannerAgent"
            embedding-model: "none"
            sandbox: "exec"
            sandbox-workspace-path: "/workspace"
          - name: MonologueAgent-py311-exec
            python-version: "3.11"
            agent: "MonologueAgent"
            embedding-model: "local"
            sandbox: "exec"
            sandbox-workspace-path: "/workspace"
          - name: CodeActAgent-py311-exec
            python-version: "3.11"
            agent: "CodeActAgent"
            embedding-model: "none"
            sandbox: "exec"
            sandbox-workspace-path: "/workspace"
          - name: MonologueAgent-py311-local
            python-version: "3.11"
            agent: "MonologueAgent"
            embedding-model: "local"
            # sufficient to have one agent testing against local sandbox
            sandbox: "local"
            sandbox-workspace-path: "${{ github.workspace }}/workspace"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Build Environment
        run: make build
      - name: Run Integration Tests
        env:
          SANDBOX_TYPE: ${{ matrix.sandbox }}
          AGENT: ${{ matrix.agent }}
          MAX_ITERATIONS: 10
          LLM_EMBEDDING_MODEL: ${{ matrix.embedding-model }}
          WORKSPACE_MOUNT_PATH_IN_SANDBOX: ${{ matrix.sandbox-workspace-path }}
        run: |
          rm -rf workspace
          mkdir workspace
          WORKSPACE_BASE="$GITHUB_WORKSPACE/workspace" WORKSPACE_MOUNT_PATH="$GITHUB_WORKSPACE/workspace" poetry run pytest -s ./tests/integration
